environment: production
type: beta

discovery:
  operator:
    # `evm_address` is the wallet address used during your registration on the RSS3 Explorer.
    evm_address:
    # The `signature` obtained during registration, it will be used to verify your ownership of this Node.
    # You MUST NOT share the signature with anyone.
    signature:
  server:
    # `endpoint` is how how Global Indexers access your Node.
    endpoint:
    # If your Node is registered on the VSL Testnet, use https://gi.rss3.dev.
    # Otherwise, DO NOT change this value.
    global_indexer_endpoint: https://gi.rss3.io

# Database configuration
database:
  driver: cockroachdb
  partition: true
  uri: postgres://root@localhost:26257/defaultdb

stream:
  enable: false
  driver: kafka
  topic: rss3.node.activities
  uri: localhost:9092

# Deploying a redis will significantly improve the indexing performance of some workers.
redis:
  endpoints:
    - localhost:6379
  username:
  password:
  disable_cache: true
  tls:
    enabled: false
    ca_file: /path/to/ca.crt
    cert_file: /path/to/client.crt
    key_file: /path/to/client.key
    insecure_skip_verify: false

# `observability` tools used to monitor and inspect the Node.
observability:
  opentelemetry:
    metrics:
      enable: true
      endpoint: 0.0.0.0:9090
    traces:
      enable: true
      endpoint: localhost:4318
      insecure: true

# `endpoints` are data access points for Workers.
# Endpoints defined here can be referenced in the configuration below.
# For example,
# - Blockchain networks require RPC endpoints,
# - Arweave requires a gateway endpoint,
# - Farcaster requires a Hubble.
endpoints:
  vsl:
    # `http2_disabled` is used to disable HTTP/2 when the endpoint does not support it.
    http2_disabled: true
    url: https://rpc.rss3.io
  arweave:
    # You can define any HTTP headers that may be required by the endpoint.
    # For example, you can use the `x-api-key`, or `any-header`.
    x-api-key: apikey
    url: https://arweave.net

# `component` is used to split different types of networks.
component:
  # `rss` network type includes workers indexing data in RSS format.
  rss:
    - network: rss
      endpoint: https://rsshub.app/
      parameters:
        authentication:
          access_key:
  # `decentralized` network type includes workers indexing data from decentralized networks such as blockchain networks, Arweave, etc.
  decentralized:
      # Each configuration here initializes a worker.
      # `id` is the unique identifier
    - id: vsl-core
      # `network` is the network that the worker is indexing from.
      network: vsl
      # `endpoint` is the data access endpoint used by the worker.
      # You can reference the endpoint defined above in the `endpoints` section.
      # You can also use a direct URL, such as `https://rpc.rss3.io`.
      endpoint: vsl
      # `worker` is the actual worker that processes the data.
      # You can find the list of available workers here: https://github.com/RSS3-Network/Node/blob/develop/README.md#supported-networks-and-workers.
      worker: core
    - id: arweave-mirror
      network: arweave
      endpoint: arweave
      worker: mirror
      # `ipfs_gateways` is used to specify the IPFS gateways used by the worker.
      # Supplying multiple gateways may improve the indexing performance and reliability.
      ipfs_gateways:
        - https://ipfs.io
        - https://cloudflare-ipfs.com
      parameters:
        # `concurrent_block_requests` is used to specify the number of concurrent block requests.
        concurrent_block_requests: 2
